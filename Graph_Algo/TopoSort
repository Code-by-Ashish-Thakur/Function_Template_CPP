/*ॐ भूर्भुवः स्व तत्सवितुर्वरेण्यं
भर्गो देवस्य धीमहि
 धियो यो नः प्रचोदयात॥*/

#include <iostream>
#include <bits/stdc++.h>
using namespace std;
#define ll long long


/*@ashish thakur */

class Solution{
public:
    vector<int> topoSort(int V, vector<int> adj[]) {
        // Array to store the indegree of each vertex
        
       //int indegree[V] = {0};
      
      vector<int>indegree(V,0);

        // Calculating the indegree for each vertex
        for (int i = 0; i < V; i++) {
            for (auto it : adj[i]) {
                indegree[it]++;
            }
        }

        // Queue to perform topological sorting
        queue<int> q;

        // Adding vertices with indegree 0 to the queue
        for (int i = 0; i < V; i++) {
            if (indegree[i] == 0) {
                q.push(i);
            }
        }

        // Vector to store the topological order
        vector<int> topo;

        // Performing topological sorting
        while (!q.empty()) {
            int node = q.front();
            q.pop();
            topo.push_back(node);

            // Decreasing the indegree of adjacent vertices and adding them to the queue if their indegree becomes 0
            for (auto it : adj[node]) {
                indegree[it]--;
                if (indegree[it] == 0) {
                    q.push(it);
                }
            }
        }

        // Returning the topological order
        return topo;
    }
};

int main() {
    // Example usage
    int V = 6;
    vector<int> adj[V];
    adj[5].push_back(2);
    adj[5].push_back(0);
    adj[4].push_back(0);
    adj[4].push_back(1);
    adj[2].push_back(3);
    adj[3].push_back(1);

    Solution s;
    vector<int> topoOrder = s.topoSort(V, adj);

    cout << "Topological Sort: ";
    for (int node : topoOrder) {
        cout << node << " ";
    }
    cout << endl;

    return 0;
}
